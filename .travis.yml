env:
  global:
    - ANDROID_SDK_ROOT=/opt/android  # any place `travis` can write to should work
language: android
dist: trusty
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    - build-tools-28.0.3

    # The SDK version used to compile your project
    # - android-28
    # - android-18
    # - sys-img-armeabi-v7a-android-18

before_install:
- chmod +x gradlew
- gem update --system
- gem install bundler
- bundle install

# Install SDK license so Android Gradle plugin can install deps.
- mkdir "$ANDROID_HOME/licenses" || true
- echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
- echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$ANDROID_HOME/licenses/android-sdk-license"
# Install the rest of tools (e.g., avdmanager)
- yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT tools
# Install the system image
- yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT "system-images;android-19;default;armeabi-v7a"
- export PATH=${ANDROID_SDK_ROOT}/tools/bin:$PATH
# Create and start emulator for the script. Meant to race the install task.

- export ANDROID_SDK_ROOT=$ANDROID_HOME
- find ${ANDROID_HOME} -name kernel-ranchu
- find ${ANDROID_HOME} -name kernel-qemu
- echo no | avdmanager create avd --force -n test -k "system-images;android-19;default;armeabi-v7a"
- $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &

# Emulator Management: Create, Start and Wait
before_script:
  # - echo no | android create avd --force -n test -t android-18 --abi armeabi-v7a -c 100M
  # - emulator -avd test -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &